FLOAT TEST
by Jacek Burys, Imperial College London, UROP 2015

FloatTest is an extension to CSmith which allows to represent float variables as intervals.
It could find use in testing of floating point optimizations by running the program in two different modes:
- normal mode - on default programs generated with --float-test options behave almost exactly like normal programs generated with CSmith, the difference is increased probablility of creating float variables and operations,
FloatTest does not yet support safe math so it is worth to add -DUNSAFE_FLOAT when running in normal mode.
- float-test mode - when the program is compiled with -DFLOAT_TEST_ENABLED it will use intervals to represent float variables, we have also provided an adapter for Boost Interval Library which is used to perform interval arithmetics oerations,


Once the program is generated it has to be compiled with -c option and then linked with the adapter in runtime directory.
Use gcc to compile and g++ to link, eg:
  csmith --float-test > prog.c
  gcc prog.c -c -I(csmith-root)/runtime [-DFLOAT_TEST_ENABLED] -o prog.o
  g++ prog.o (csmith-root)/runtime/adapter.o -o prog

TRACKING
The provided adapter supports tracking of global variables. Use adaptertracking.o object in runtime directory for linking.
The generated program has to be compiled with -DTRACKING and -D__GLOB=(name of the tracked variable )eg:
  csmiht --float-test --seed 123 > prog.c
  gcc prog.c -c -I(csmith-root)/runtime -DFLOAT_TEST_ENABLED -DTRACKING -D__GLOB=g_123 -o prog.o
  g++ prog.o (csmith-root)/runtime/adaptertracking.o -o prog
